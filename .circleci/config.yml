version: 2.1

orbs:
  python: circleci/python@0.3.0
  win: circleci/windows@2.4.0

jobs:
  ubuntu-build:
    executor: python/default
    steps:
      - checkout
      - python/load-cache
      - python/install-deps
      - python/save-cache
      - run:
          command: |
            python --version
            python build_binary.py build_exe
            tar -zcvf linux-build.tar.gz build/
            mkdir results/ 
            mv linux-build.tar.gz results/ 
          name: Build Test
      - store_artifacts:
          path: results/
  windows-build:
    executor: win/default
    steps:
      - checkout
      - python/load-cache
      - python/save-cache
      - run:
          name: upgrade python
          command: |
            choco install python --version=3.8.2
            refreshenv
            python --version
            $Env:Path
      - run:
          name: install dependencies
          command: |
            pip install --user pip --upgrade
            pip install --user -r requirements.txt
      - run:
          name: run cxfreeze
          command: |
            python build_binary.py build_exe
            tar.exe -a -c -f windows-build.zip build
            mkdir results
            move windows-build.zip results/ 
          
      - store_artifacts:
          path: results/
  
  macos-build:
    macos: 
      xcode: 9.4.1
    steps:
      - checkout
      # - run:
      #     name: install tkinter
      #     command: |
      #       brew uninstall python@2
      #       brew uninstall python
      #       brew update
      #       brew install tcl-tk
      #       # brew update
      #       # brew install python@3.8
      #       # brew list
      # - run:
      #     name: install pyenv
      #     command: brew install pyenv
      # - run:
      #     name: compile python with tkinter
      #     command: PYTHON_CONFIGURE_OPTS="--with-tcltk-includes='-I/usr/local/opt/tcl-tk/include' --with-tcltk-libs='-L/usr/local/opt/tcl-tk/lib -ltcl8.6 -ltk8.6' --enable-shared" MACOSX_DEPLOYMENT_TARGET=10.9 pyenv install 3.8.5

      # - save_cache:
      #     key: pyenv
      #     paths:
      #       - "~/.pyenv"
      # - run:
      #     name: set pyenv installation to global
      #     command: |
      #       pyenv global 3.8.5
      #       echo -e 'if command -v pyenv 1>/dev/null 2>&1; then\n  eval "$(pyenv init -)"\nfi' >> ~/.zshrc
      #       echo -e 'if command -v pyenv 1>/dev/null 2>&1; then\n  eval "$(pyenv init -)"\nfi' >> ~/.bash_profile
      #       source ~/.zshrc
      #       source ~/.bash_profile
      #       python --version
      - run:
          name: download python
          command: curl -O https://www.python.org/ftp/python/3.7.4/python-3.7.4-macosx10.9.pkg
      - run:
          name: install python
          command: sudo installer -pkg python-3.7.4-macosx10.9.pkg -target /
      - run: 
          name: install dependencies
          command: |
            python3.7 -m pip install pip --upgrade
            python3.7 -m pip install -r requirements.txt
      # - run:
      #     name: run cxfreeze
      #     command: |
      #       python3 build_binary.py bdist_mac
      #       tar -zcvf macos-build.tar.gz build/greenflare.app
      #       mkdir results/ 
      #       mv macos-build.tar.gz results/
      - run:
          name: PyInstaller App Bundle
          command: |
            python3.7 -m PyInstaller greenflare.spec --noconfirm
            cp -r /Library/Frameworks/Python.framework/Versions/3.7/lib/tk8.6 dist/greenflare.app/Contents/MacOS/tk
            cp -r /Library/Frameworks/Python.framework/Versions/3.7/lib/tcl8.6 dist/greenflare.app/Contents/MacOS/tcl
            tar -zcvf macos-build.tar.gz dist/greenflare.app
            mkdir results
            mv macos-build.tar.gz results/
      - store_artifacts:
          path: results/
workflows:
  main:
    jobs:
      # - ubuntu-build
      # - windows-build
      - macos-build