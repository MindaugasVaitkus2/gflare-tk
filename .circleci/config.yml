---
jobs:
  macos-build:
    environment:
      GFLAREVER: "<< pipeline.parameters.greenflare-release >>"
    macos:
      xcode: "12.0.0"
    steps:
      - checkout
      - restore_cache:
          keys:
            - python-build-cache-3.8.6-3
            # - python-venv-3.8.6-3
      - run:
          command: |
              cd macos
              chmod +x install-custom-python.sh
              ./install-custom-python.sh
              cd ..
          name: "Install Python"
      - save_cache:
          key: python-build-cache-3.8.6-3
          paths:
            - ~/python-build
      - run:
          command: |
              /Library/Frameworks/Python.framework/Versions/3.8/bin/python3 -m pip install pip --upgrade
              /Library/Frameworks/Python.framework/Versions/3.8/bin/python3 -m pip install -r requirements.txt
              /Library/Frameworks/Python.framework/Versions/3.8/bin/python3 -m pip install py2app==0.22
              /Library/Frameworks/Python.framework/Versions/3.8/bin/python3 -m pip install macholib==1.14
          name: "Install dependencies"
      # - save_cache:
      #     key: python-venv-3.8.6-3
      #     paths:
      #       - ~/.venv
      - run:
          command: |
              /Library/Frameworks/Python.framework/Versions/3.8/bin/python3 setup-py2app.py py2app --packages=PIL
              chmod +x macos/launch-mac
              cp macos/launch-mac dist/Greenflare.app/Contents/MacOS/
              plutil -replace CFBundleExecutable -string launch-mac dist/Greenflare.app/Contents/Info.plist
          name: "Freeze macOS app"
      - run:
          command: |
              export GFLAREVER=$(/Library/Frameworks/Python.framework/Versions/3.8/bin/python3 -c "from greenflare.core.defaults import Defaults; print(Defaults.version)")
              mkdir results/
              cd dist/
              hdiutil create ./greenflare-${GFLAREVER}-x86_64-1.dmg -srcfolder Greenflare.app -ov
              mv greenflare-*.dmg ../results/
          name: "Package .dmg app bundle"
      - store_artifacts:
          path: results/
  ubuntu-build:
    executor: python/default
    steps:
      - checkout
      - python/load-cache
      - python/install-deps
      - python/save-cache
      - run:
          command: |
              python --version
              export GFLAREVER=$(python -c "from greenflare.core.defaults import Defaults; print(Defaults.version)")
              python build_binary.py build_exe
              tar -zcvf linux-build.tar.gz build/
              mkdir results/
              mv linux-build.tar.gz results/
          name: "Freeze Linux Binary"
      - store_artifacts:
          path: results/
  windows-build:
    environment:
      GFLAREVER: "<< pipeline.parameters.greenflare-release >>"
    executor: win/default
    steps:
      - checkout
      - python/load-cache
      - python/save-cache
      - run:
          command: |
              choco install python --version=3.8.6
              refreshenv
              python --version
              $Env:Path
          name: "Install Python"
      - run:
          command: |
              pip install --user pip --upgrade
              pip install --user -r requirements.txt
              pip install cx-freeze==6.1
          name: "Install dependencies"
      - run:
          command: |
              $env:GFLAREVER=$(python -c "from greenflare.core.defaults import Defaults; print(Defaults.version)")
              python build_binary.py build_exe
              tar.exe -a -c -f greenflare-$env:GFLAREVER-portable-x86_64-1.zip build/exe.win-amd64-3.8/
              mkdir results
              move greenflare-*.zip results/
          name: "Freeze Windows Programme"
          shell: powershell.exe
      - store_artifacts:
          path: results/
orbs:
  python: circleci/python@0.3.0
  win: circleci/windows@2.4.0
parameters:
  greenflare-release:
    default: "0.0"
    type: string

version: 2.1
workflows:
  main:
    jobs:
      - windows-build:
          filters:
            branches:
              only: master
      - macos-build:
          filters:
            branches:
              only: master
